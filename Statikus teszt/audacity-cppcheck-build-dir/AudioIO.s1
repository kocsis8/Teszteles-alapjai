GetNumChannels
GetMaxNumChannels
GetNumTracks
TotalCorrection
PlaybackSlice
ReversedTime
GetTrackTime call:[load] noreturn:[load]
SetTrackTime call:[store] noreturn:[store]
ResetMode call:[store] noreturn:[store]
AudioIOExtIterator
operator++
operator==
operator!=
begin
end
Extensions
GetListener call:[lock] noreturn:[lock]
SetRecordingException call:[wxAtomicInc] noreturn:[wxAtomicInc]
ClearRecordingException call:[wxAtomicDec] noreturn:[wxAtomicDec]
LostCaptureIntervals
SeekStream
GetLastPlaybackTime
GetOwningProject call:[lock] noreturn:[lock]
GetCaptureFormat
GetNumPlaybackChannels
GetNumCaptureChannels
AudioIOListener
AudioIOListener
IsOk call:[empty] noreturn:[empty]
Project
AttachedWindows
operatorAudacityProject&
operator==
operator!=
CompatibleTrackKinds call:[return]
value
value call:[value] noreturn:[value]
TrackId
TrackId
operator==
operator!=
operator<
ConstTrackInterval call:[wxASSERT] noreturn:[wxASSERT]
Start
End
Extra call:[get] noreturn:[get]
Extra call:[get] noreturn:[get]
GetId
SetId
SharedPointer call:[shared_from_this]
SharedPointer call:[shared_from_this]
SharedPointer
SharedPointer
HasOwner call:[GetOwner]
GetOwner call:[lock] noreturn:[lock]
GetName
GetDefaultName
SetDefaultName
GetSelected
GetChannel
Offset call:[GetOffset,SetOffset] noreturn:[SetOffset]
SetOffset
SetPan
SetPanFromChannelType
GetKind
SameKindAs call:[GetKind] noreturn:[GetKind]
operator()
operator() call:[function] noreturn:[function]
operator() call:[function] noreturn:[function]
operator()
operator()
TypeSwitch call:[GetKind,sizeof...,static_assert]
TypeSwitch call:[GetKind,sizeof...,static_assert]
GetErrorOpening
AudioTrack
AudioTrack
WriteXMLAttributes
HandleXMLAttribute
PlayableTrack
PlayableTrack
GetMute
GetSolo
GetNotMute
GetNotSolo
track_cast call:[CompatibleTrackKinds,GetKind,track_kind < BareType >]
TrackListEvent
Clone call:[TrackListEvent] noreturn:[TrackListEvent]
GetOwner
GetOwner
begin call:[Any,begin] noreturn:[begin]
end call:[Any,end] noreturn:[end]
begin call:[Any,begin] noreturn:[begin]
end call:[Any,end] noreturn:[end]
cbegin call:[begin] noreturn:[begin]
cend call:[end] noreturn:[end]
Find call:[GetNode,GetOwner,get]
Find call:[GetNode,GetOwner,get]
FindLeader call:[Filter < const Track >,FindLeader] noreturn:[Filter < const Track >]
Any
Any
Selected
Selected
Leaders
Leaders
SelectedLeaders
SelectedLeaders
SingletonRange call:[EndingAfter,GetOwner,StartingWith] noreturn:[EndingAfter]
SyncLockGroup call:[Filter < const Track >,SyncLockGroup] noreturn:[Filter < const Track >]
Channels_ call:[Filter]
Channels call:[FindLeader,GetOwner]
AddToHead call:[DoAddToHead]
Add call:[DoAdd]
Move call:[MoveDown,MoveUp] noreturn:[MoveDown]
Lock call:[get,lock]
Tracks call:[getBegin,getEnd]
Tracks call:[getBegin,getEnd]
MakeTrackIterator call:[getBegin,getEnd]
EndIterator call:[getEnd]
isNull call:[end,return]
getEnd call:[end]
getBegin call:[begin]
getNext call:[isNull]
getPrev call:[getBegin,getEnd] noreturn:[getEnd]
WaveTrackLocation
operator==
operator!=
Region
Region
operator<
GetWaveColorIndex
GetSampleFormat
GetFloats call:[Get] noreturn:[Get]
GetClips
GetClips
AllClipsIterator
AllClipsIterator call:[push] noreturn:[push]
operator* call:[back,empty,get] noreturn:[get]
operator== call:[empty] noreturn:[empty]
operator!=
AllClipsConstIterator
AllClipsConstIterator
operator*
operator++
operator==
operator!=
GetAllClips
GetAllClips
GetCachedLocations
GetLastScaleType
GetLastdBRange
IntervalData
GetClip
GetClip
GetKind
WaveTrackCache
WaveTrackCache call:[SetTrack] noreturn:[SetTrack]
GetTrack
Buffer
Free call:[reset]
end
swap call:[swap] noreturn:[swap]
GetSampleBlockFactory
AudioThread
AudacityToPortAudioSampleFormat
Entry call:[Get,GetPolicy,SleepInterval,TestDestroy,TrackBufferExchange,now,sleep_until] noreturn:[TrackBufferExchange,sleep_until]
GetCommonlyReadyPlayback call:[AvailForGet,min,size] noreturn:[min]
SetListener call:[IsBusy]
DoSoftwarePlaythrough call:[SAMPLE_SIZE,SamplesToFloats] noreturn:[SamplesToFloats]
audacityAudioCallback call:[AudioCallback,Get] noreturn:[AudioCallback]
CheckSoundActivatedRecordingLevel call:[GetListener,IsPaused,OnSoundActivationThreshold,fabs] noreturn:[OnSoundActivationThreshold]
AddToOutputChannel call:[ExpGain,GetChannelGain,GetOldChannelGain,SetOldChannelGain,load,wxASSERT] noreturn:[SetOldChannelGain]
ClampBuffer call:[wxClip] noreturn:[wxClip]
FillOutputBuffers call:[AddToOutputChannel,AllowSeek,CallbackCheckCompletion,CallbackDoSeek,ClampBuffer,Discard,Get,GetChannelIgnoringPan,GetCommonlyReadyPlayback,GetPolicy,GetSelected,IsLeader,RealtimeProcess,RealtimeProcessEnd,RealtimeProcessStart,TrackHasBeenFadedOut,TrackShouldBeSilent,alloca,decltype,get,max,memset,size,sizeof,wxGetUTCTimeMillis] noreturn:[AddToOutputChannel,CallbackCheckCompletion,ClampBuffer,Discard,RealtimeProcess,TrackHasBeenFadedOut,alloca,memset]
UpdateTimePosition call:[Consumer,SetTrackTime] noreturn:[SetTrackTime]
DrainInputBuffers call:[AvailForPut,Done,GetPolicy,GetTrackTime,Put,back,emplace_back,empty,fabs,min,rand,size,wxASSERT,wxClip,wxPrintf,wxT,wxUnusedVar] noreturn:[emplace_back,min,wxPrintf,wxUnusedVar]
DoPlaythrough call:[DoSoftwarePlaythrough] noreturn:[DoSoftwarePlaythrough]
SendVuInputMeterData call:[IsMeterDisabled,UpdateDisplay,lock] noreturn:[UpdateDisplay]
SendVuOutputMeterData call:[IsMeterDisabled,UpdateDisplay,lock] noreturn:[UpdateDisplay]
CountSoloingTracks call:[CountOtherSoloTracks,Extensions,GetSolo,accumulate,begin,end,size] noreturn:[CountOtherSoloTracks]
TrackShouldBeSilent call:[GetMute,GetSolo]
TrackHasBeenFadedOut call:[GetChannelIgnoringPan,GetOldChannelGain]
AllTracksAlreadySilent call:[TrackHasBeenFadedOut,TrackShouldBeSilent,all_of,begin,end] noreturn:[TrackHasBeenFadedOut]
AudioIoCallback call:[GetFactories,factory,move,push_back] noreturn:[push_back]
AudioIoCallback
CallbackDoSeek call:[AvailForGet,Discard,GetPolicy,OffsetTrackTime,Prime,Reposition,SetTrackTime,locker,size,wxMilliSleep,wxUnusedVar] noreturn:[wxMilliSleep,wxUnusedVar]
CallbackCheckCompletion call:[Done,Extensions,GetPolicy,SignalOtherCompletion] noreturn:[SignalOtherCompletion]
operator* call:[get]
TrackIterRange < Track >
operator+ call:[Filter,GetPredicate,pred1,pred2] noreturn:[pred2]
operator+ call:[mem_fn,operator+] noreturn:[operator+]
operator- call:[operator+,pred2] noreturn:[operator+,pred2]
operator- call:[mem_fn,not1,operator+] noreturn:[operator+]
Filter
StartingWith call:[GetPredicate,find]
EndingAfter call:[GetPredicate,base,find,reversal]
Excluding call:[operator-] noreturn:[operator-]
Visit call:[TypeSwitch] noreturn:[TypeSwitch]
VisitWhile call:[TypeSwitch]
TrackIterRange < const Track >
operator+ call:[Filter,GetPredicate,pred1,pred2] noreturn:[pred2]
operator+ call:[mem_fn,operator+] noreturn:[operator+]
operator- call:[operator+,pred2] noreturn:[operator+,pred2]
operator- call:[mem_fn,not1,operator+] noreturn:[operator+]
Filter
StartingWith call:[GetPredicate,find]
EndingAfter call:[GetPredicate,base,find,reversal]
Excluding call:[operator-] noreturn:[operator-]
Visit call:[TypeSwitch] noreturn:[TypeSwitch]
VisitWhile call:[TypeSwitch]
TrackIter < Track > call:[operator++,valid] noreturn:[operator++]
Filter
Filter
GetPredicate
operator++ call:[valid,while] noreturn:[while]
operator++ call:[operator++]
operator-- call:[valid,while]
operator-- call:[operator--]
operator*
advance call:[advance]
operator==
operator!=
valid call:[mPred,track_cast < Track * >] noreturn:[mPred]
TrackIter < const Track > call:[operator++,valid] noreturn:[operator++]
Filter
GetPredicate
operator++ call:[valid,while] noreturn:[while]
operator++ call:[operator++]
operator-- call:[valid,while]
operator-- call:[operator--]
operator*
advance call:[advance]
operator==
operator!=
valid call:[mPred,track_cast < const Track * >] noreturn:[mPred]
track_cast < Track * > call:[CompatibleTrackKinds,GetKind,track_kind < BareType >]
track_cast < const Track * > call:[CompatibleTrackKinds,GetKind,track_kind < BareType >]
track_kind < BareType > call:[value] noreturn:[value]
Initialize call:[exchange,store] noreturn:[exchange]
Read call:[exchange,load,move,store,while] noreturn:[exchange]
Write call:[exchange,load,store,while] noreturn:[exchange,store]
Write call:[exchange,load,move,store,while] noreturn:[exchange,store]
