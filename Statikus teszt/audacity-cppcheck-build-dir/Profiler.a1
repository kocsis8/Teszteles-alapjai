<?xml version="1.0"?>
<analyzerinfo checksum="293901207">
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TaskProfile::mLine&apos; is not initialized in the constructor." verbose="Member variable &apos;TaskProfile::mLine&apos; is not initialized in the constructor." cwe="398" file0="P:/Kocsis dolgok/UMI/5 felev/teszt alap/audacity-master/src/Profiler.cpp">
            <location file="P:\Kocsis dolgok\UMI\5 felev\teszt alap\audacity-master\src\Profiler.cpp" line="117" column="14"/>
            <symbol>TaskProfile::mLine</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TaskProfile::mLastTime&apos; is not initialized in the constructor." verbose="Member variable &apos;TaskProfile::mLastTime&apos; is not initialized in the constructor." cwe="398" file0="P:/Kocsis dolgok/UMI/5 felev/teszt alap/audacity-master/src/Profiler.cpp">
            <location file="P:\Kocsis dolgok\UMI\5 felev\teszt alap\audacity-master\src\Profiler.cpp" line="117" column="14"/>
            <symbol>TaskProfile::mLastTime</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;mCumTime&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;mCumTime&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="P:/Kocsis dolgok/UMI/5 felev/teszt alap/audacity-master/src/Profiler.cpp">
            <location file="P:\Kocsis dolgok\UMI\5 felev\teszt alap\audacity-master\src\Profiler.cpp" line="119" column="4"/>
            <symbol>mCumTime</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="P:/Kocsis dolgok/UMI/5 felev/teszt alap/audacity-master/src/Profiler.h:59:17" call-funcname="GetOrCreateTaskProfile" call-argnr="1" file="P:/Kocsis dolgok/UMI/5 felev/teszt alap/audacity-master/src/Profiler.cpp" line="67" col="4" my-id="P:/Kocsis dolgok/UMI/5 felev/teszt alap/audacity-master/src/Profiler.h:47:9" my-argnr="1"/>
<function-call call-id="P:/Kocsis dolgok/UMI/5 felev/teszt alap/audacity-master/src/Profiler.h:60:17" call-funcname="GetTaskProfileByDescription" call-argnr="1" file="P:/Kocsis dolgok/UMI/5 felev/teszt alap/audacity-master/src/Profiler.cpp" line="75" col="7" my-id="P:/Kocsis dolgok/UMI/5 felev/teszt alap/audacity-master/src/Profiler.h:49:9" my-argnr="3"/>
  </FileInfo>
  <FileInfo check="Class">
<class name="Profiler" file="P:/Kocsis dolgok/UMI/5 felev/teszt alap/audacity-master/src/Profiler.h" line="39" col="1" hash="7321181264995564833"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="Begin" lineNumber="64"/>
    <functiondecl functionName="End" lineNumber="71"/>
    <functiondecl functionName="Instance" lineNumber="81"/>
    <functiondecl functionName="GetOrCreateTaskProfile" lineNumber="90"/>
    <functiondecl functionName="GetTaskProfileByDescription" lineNumber="103"/>
    <functiondecl functionName="Begin" lineNumber="128"/>
    <functiondecl functionName="ComputeAverageRunTime" lineNumber="150"/>
    <functioncall functionName="Begin"/>
    <functioncall functionName="CLOCKS_PER_SEC"/>
    <functioncall functionName="ComputeAverageRunTime"/>
    <functioncall functionName="End"/>
    <functioncall functionName="GetOrCreateTaskProfile"/>
    <functioncall functionName="GetTaskProfileByDescription"/>
    <functioncall functionName="TaskProfile"/>
    <functioncall functionName="back"/>
    <functioncall functionName="char"/>
    <functioncall functionName="clock"/>
    <functioncall functionName="ctime"/>
    <functioncall functionName="description"/>
    <functioncall functionName="double"/>
    <functioncall functionName="fclose"/>
    <functioncall functionName="fileName"/>
    <functioncall functionName="fopen"/>
    <functioncall functionName="for"/>
    <functioncall functionName="get"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int"/>
    <functioncall functionName="lineNum"/>
    <functioncall functionName="log"/>
    <functioncall functionName="mFileName"/>
    <functioncall functionName="mLastTime"/>
    <functioncall functionName="mLine"/>
    <functioncall functionName="mNumHits"/>
    <functioncall functionName="mTasksMutex"/>
    <functioncall functionName="make_unique"/>
    <functioncall functionName="move"/>
    <functioncall functionName="mutex"/>
    <functioncall functionName="now"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="reinit"/>
    <functioncall functionName="return"/>
    <functioncall functionName="size"/>
    <functioncall functionName="strcmp"/>
    <functioncall functionName="strcpy"/>
    <functioncall functionName="strlen"/>
    <functioncall functionName="taskDescription"/>
    <functioncall functionName="time"/>
    <functioncall functionName="tp"/>
    <functioncall functionName="unique_ptr"/>
    <functioncall functionName="wxFprintf"/>
  </FileInfo>
</analyzerinfo>
